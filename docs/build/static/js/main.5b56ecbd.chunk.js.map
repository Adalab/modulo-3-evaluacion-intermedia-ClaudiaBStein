{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","info","data","setData","newName","setNewName","newWeekday","setNewWeekday","newWeekend","setNewWeekend","htmlClubList","map","club","index","className","name","openOnWeekdays","openOnWeekends","onChange","value","class","type","ev","currentTarget","checked","onClick","newClub","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAyGeA,MApGf,WAIE,MAAwBC,mBAASC,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BH,mBAAS,IAAvC,mBACA,GADA,UAC8BA,mBAAS,KAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAAoCL,mBAAS,IAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAAoCP,mBAAS,IAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KAsBMC,EAAeR,EAAKS,KAAI,SAACC,EAAMC,GAAP,OAC5B,qBAAIC,UAAU,OAAd,UACE,oBAAIA,UAAU,OAAd,SAAsBF,EAAKG,OAC3B,wBAAOD,UAAU,WAAjB,mCACgD,IAAxBF,EAAKI,eAA0B,SAAQ,SAE/D,wBAAOF,UAAU,WAAjB,uCACoD,IAAxBF,EAAKK,eAA0B,SAAQ,eAKvE,OACE,qCACE,mCACE,oBAAIH,UAAU,QAAd,wBACA,sBAAMA,UAAU,OAAhB,SACE,yBAAQC,KAAK,SAASD,UAAU,SAASI,SAAS,GAAlD,UACE,wBAAQC,MAAM,GAAd,6BACA,wBAAQA,MAAM,GAAd,wCACA,wBAAQA,MAAM,GAAd,oDAKN,uBAAML,UAAU,SAAhB,UACE,oBAAIA,UAAU,OAAd,SAAsBJ,IACtB,uBAAMI,UAAU,QAAhB,UACE,oBAAIM,MAAM,MAAV,qCACA,wBAAON,UAAU,UAAjB,4BAEE,uBACEO,KAAK,OACLP,UAAU,UACVC,KAAK,cACLI,MAAOf,EACPc,SAxDU,SAACI,GACrBjB,EAAWiB,EAAGC,cAAcJ,aA0DtB,wBAAOL,UAAU,cAAjB,mCAGI,uBACEO,KAAK,WACLG,QAASlB,EACTmB,QA9DS,SAACH,GACtBf,EAAce,EAAGC,cAAcC,eAiEzB,wBAAOV,UAAU,cAAjB,uCAEE,uBACEO,KAAK,WACLG,QAAShB,EACTiB,QApEW,SAACH,GACtBb,EAAca,EAAGC,cAAcC,eAsEzB,uBACEH,KAAK,SACLD,MAAM,SACNL,KAAK,SACLI,MAAM,YACNM,QAzEU,SAACH,GACnB,IAAMI,EAAU,CACdX,KAAMX,EACNE,WAAYA,EACZE,WAAYA,GAGdN,EAAKyB,KAAKD,GACVvB,EAAQ,YAAID,iBCpBD0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5b56ecbd.chunk.js","sourcesContent":["import './App.js';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport info from './clubs.json';\n\nfunction App() {\n  /*Variables*/\n\n  /*Variables de estado*/\n  const [data, setData] = useState(info);\n  const [newClub, setNewClub] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newWeekday, setNewWeekday] = useState('');\n  const [newWeekend, setNewWeekend] = useState('');\n  /*Funciones*/\n  const handleAddClub = (ev) => {\n    setNewName(ev.currentTarget.value);\n  };\n  const handleWeekdays = (ev) => {\n    setNewWeekday(ev.currentTarget.checked);\n  };\n  const handleWeekends = (ev) => {\n    setNewWeekend(ev.currentTarget.checked);\n  };\n  const handleClick = (ev) => {\n    const newClub = {\n      name: newName,\n      newWeekday: newWeekday,\n      newWeekend: newWeekend,\n    };\n\n    data.push(newClub);\n    setData([...data]);\n  };\n\n  const htmlClubList = data.map((club, index) => (\n    <li className='club'>\n      <h2 className='name'>{club.name}</h2>\n      <label className='weekdays'>\n        Abierto entre semana:{club.openOnWeekdays === true ? ' Sí' : ' No'}\n      </label>\n      <label className='weekends'>\n        Abierto el fin de semana:{club.openOnWeekends === true ? ' Sí' : ' No'}\n      </label>\n    </li>\n  ));\n\n  return (\n    <>\n      <header>\n        <h1 className='title'>Mis clubs:</h1>\n        <form className='form'>\n          <select name='select' className='select' onChange=''>\n            <option value=''>todos mis clubs</option>\n            <option value=''>los que abren entre semana</option>\n            <option value=''>los que abren el fin de semana</option>\n          </select>\n        </form>\n      </header>\n\n      <main className='header'>\n        <ul className='list'>{htmlClubList}</ul>\n        <form className='form2'>\n          <h2 class='add'>Añadir un nuevo club</h2>\n          <label className='addname'>\n            Nombre del club\n            <input\n              type='text'\n              className='addtext'\n              name='description'\n              value={newName}\n              onChange={handleAddClub}\n            />\n          </label>\n          <label className='openweekday'>\n            ¿Abre entre semana?\n            {\n              <input\n                type='checkbox'\n                checked={newWeekday}\n                onClick={handleWeekdays}\n              ></input>\n            }\n          </label>\n          <label className='openweekend'>\n            ¿Abre el fin de semana?\n            <input\n              type='checkbox'\n              checked={newWeekend}\n              onClick={handleWeekends}\n            ></input>\n          </label>\n          <input\n            type='button'\n            class='button'\n            name='button'\n            value='Añadir'\n            onClick={handleClick}\n          />\n        </form>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}